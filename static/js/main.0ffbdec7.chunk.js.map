{"version":3,"sources":["pages/level.js","pages/home.js","App.js","reportWebVitals.js","index.js"],"names":["Level","cityOptions","cityList","back","startRound","useState","cities","setCities","currentCity","setCurrentCity","currentZoom","setCurrentZoom","cityPointer","setCityPointer","score","setScore","totalScore","setTotalScore","isInLevel","setIsInLevel","cActive","setCActive","showHint","setShowHint","hintType","setHintType","chooseCity","console","log","city","out","i","tmp","Math","floor","random","length","includes","push","array","randomIndex","currentIndex","shuffle","useEffect","confettiConfig","angle","spread","startVelocity","elementCount","dragFriction","duration","stagger","width","height","perspective","colors","id","className","src","process","alt","onClick","map","e","document","getElementById","setTimeout","disabled","onBtnClick","active","config","hints","Home","levels","setGame","levelsPointer","setlevelsPointer","placeholder","type","App","largest25","largest50","largest100","euroLargest35","setCityList","setCityOptions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.0ffbdec7.chunk.js","sourcesContent":["import '../styles/App.css';\r\nimport '../styles/Level.css';\r\nimport {useState, useEffect} from 'react';\r\nimport Confetti from 'react-dom-confetti';\r\nimport hints from \"./hints.json\"\r\n\r\nexport default function Level({cityOptions, cityList, back, startRound}) {\r\n  const [cities, setCities] = useState([])\r\n  const [currentCity, setCurrentCity] = useState(\"\")\r\n  const [currentZoom, setCurrentZoom] = useState(0)\r\n  const [cityPointer, setCityPointer] = useState(0)\r\n  const [score, setScore] = useState(500)\r\n  const [totalScore, setTotalScore] = useState(0)\r\n  const [isInLevel, setIsInLevel] = useState(true)\r\n  const [cActive, setCActive] = useState(false)\r\n  const [showHint, setShowHint] = useState(false)\r\n  const [hintType, setHintType] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    chooseCity()\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  function shuffle(array) {\r\n    var currentIndex = array.length,  randomIndex;\r\n    while (currentIndex !== 0) {\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex--;\r\n      [array[currentIndex], array[randomIndex]] = [\r\n        array[randomIndex], array[currentIndex]];\r\n    }\r\n    return array;\r\n  }\r\n  \r\n  function chooseCity(){\r\n    console.log(cityPointer)\r\n    let city = cityList[cityPointer]\r\n    setCurrentCity(city)\r\n    setCityPointer(cityPointer+1)\r\n\r\n    let out = [city]\r\n    let i = 0\r\n    while(i<7){\r\n      let tmp = cityOptions[Math.floor(Math.random() * cityOptions.length)]\r\n      if(!out.includes(tmp)){\r\n        out.push(tmp)\r\n        i++\r\n      }\r\n    }\r\n    setCities(shuffle(out))\r\n  }\r\n\r\n  function onBtnClick(e,i){\r\n    if(e===currentCity){\r\n      document.getElementById(i).className = \"light-green\";\r\n      setCActive(true)\r\n      setShowHint(false)\r\n      setTimeout(() => {\r\n        document.getElementById(i).className = \"\";\r\n        setCurrentZoom(0)\r\n        chooseCity()\r\n        setTotalScore(totalScore+score)\r\n        setScore(500)\r\n        i=0\r\n        while(i<8){\r\n          document.getElementById(i).disabled = false;\r\n          i++\r\n        }\r\n        setCActive(false)\r\n        if(cityPointer === 10){\r\n            setIsInLevel(false)\r\n            return\r\n        }\r\n      }, 1000);\r\n    }else{\r\n      document.getElementById(i).disabled = true;\r\n      setScore(score-100)\r\n    }\r\n  }\r\n\r\n  const confettiConfig = {\r\n    angle: 90,\r\n    spread:  90,\r\n    startVelocity: 50,\r\n    elementCount: 50,\r\n    dragFriction: 0.3,\r\n    duration: 2000,\r\n    stagger: 3,\r\n    width: \"10px\",\r\n    height: \"10px\",\r\n    perspective: \"63vh\",\r\n    colors: [\"#a864fd\", \"#29cdff\", \"#78ff44\", \"#ff718d\", \"#fdff6a\"]\r\n  };\r\n  function showHintLandmark(){\r\n    setShowHint(true)\r\n    setHintType('landmark')\r\n    setScore(score-200)\r\n  }\r\n\r\n  function showHintSkyline(){\r\n    setShowHint(true)\r\n    setHintType('skyline')\r\n    setScore(score-200)\r\n  }\r\n\r\n  function restart(){\r\n    setCurrentCity(\"\")\r\n    setCurrentZoom(0)\r\n    setCityPointer(0)\r\n    setScore(500)\r\n    setTotalScore(0)\r\n    setShowHint(false)\r\n    setTimeout(() => {\r\n      // chooseCity()\r\n    }, 500);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    {isInLevel? \r\n    <div id='main-level-div'>\r\n        <div>\r\n          <div id='status-div'>\r\n            <h3>{cityPointer}/10</h3>\r\n            <h3 className=\"float-end\">Score: {score}</h3>\r\n          </div>\r\n          <img src={process.env.PUBLIC_URL + \"/Cities/\"+currentCity+\"/\"+currentCity+currentZoom+\".png\"} className=\"\" alt=\"...\"/>\r\n          <div id=\"zoom-div\">\r\n            <button onClick={()=>{if(currentZoom > -2){setCurrentZoom(currentZoom-1); setScore(score-50)}}}>Zoom Out</button>\r\n            <h4 id=\"zoom-display\">Zoom: {currentZoom}</h4>\r\n            <button onClick={()=>{if(currentZoom < 2){setCurrentZoom(currentZoom+1); setScore(score-50)}}}>Zoom In</button>\r\n          </div>\r\n        </div>\r\n        <div id=\"cities-div\">\r\n          {cities.map((e,i)=><button id={i} className=\"\" key={i} onClick={()=>onBtnClick(e,i)} disabled={false}>{e}{e===currentCity?<Confetti className=\"confetti\" active={cActive} config={confettiConfig}/>:<></>}</button>)}\r\n        </div>\r\n        <div id=\"options-div\">\r\n          <div>\r\n            <h2>Total Score: {totalScore}</h2>\r\n            <div id=\"hint-div\">\r\n              <button onClick={showHintLandmark}>Landmark Hint</button>\r\n              <button onClick={showHintSkyline}>Skyline Hint</button>\r\n            </div>\r\n          </div>\r\n          {/* process.env.PUBLIC_URL + \"/Cities/\"+currentCity+\"/\"+currentCity+hintType+\".png\" */}\r\n          {showHint?<img src={hints[currentCity][hintType]} id=\"hint\" alt=\"...\"/>:<></>}\r\n          <div id=\"endgame-div\">\r\n            <button onClick={back}>Main Menu</button>\r\n            <button onClick={restart}>Restart</button>\r\n          </div>\r\n        </div>\r\n        </div>\r\n      :<div id=\"level-end-div\">\r\n        <h1>Round Over</h1>\r\n        <h2>Score: {totalScore}/5000</h2>\r\n        {/* <button className=\"btn btn-primary\" onClick={()=>{setIsInLevel(true); startRound()}}>Play Again</button> */}\r\n        <br/>\r\n        <button onClick={back}>Main Menu</button>\r\n      </div>}\r\n    </div>\r\n  );\r\n}","import '../styles/App.css';\r\nimport '../styles/Home.css'\r\nimport { useState } from 'react';\r\n\r\nexport default function Home({startRound, levels, setGame}) {\r\n    const [levelsPointer, setlevelsPointer] = useState(0)\r\n    function changeGame(){\r\n        if(levelsPointer === levels.length-1){\r\n            setGame(levels[0])\r\n            setlevelsPointer(0);\r\n        }else{\r\n            setGame(levels[levelsPointer+1])\r\n            setlevelsPointer(levelsPointer+1);\r\n        }\r\n    }\r\n    return (\r\n        <div id='main-menu-div'>\r\n            <div className=\"title-div\">\r\n                <h1 id=\"title\">City Spotter</h1>\r\n                <div id=\"start-div\">\r\n                    <h2>{levels[levelsPointer]}</h2>\r\n                    <button onClick={startRound}>Play</button>\r\n                    <br/>\r\n                    <button onClick={changeGame}>Change Game</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"title-div\">\r\n                <div className=\"menu-div\">\r\n                    <h2 className=\"green\">Login</h2>\r\n                    <form>\r\n                        <input className=\"green\" placeholder=\"username\" type=\"text\"></input>\r\n                        <input className=\"green\" placeholder=\"password\" type=\"password\"></input>\r\n                    </form>\r\n                </div>\r\n                <div className=\"menu-div\">\r\n                    <h2 className=\"green\">High Scores</h2>\r\n                    <ul>\r\n                        <li className=\"green\"><span>Dave</span>--<span>5000</span></li>\r\n                        <li className=\"green\"><span>John</span>--<span>4000</span></li>\r\n                        <li className=\"green\"><span>Sean</span>--<span>3000</span></li>\r\n                        <li className=\"green\"><span>Ted</span>--<span>2000</span></li>\r\n                        <li className=\"green\"><span>Redmond</span>--<span>1500</span></li>\r\n                        <li className=\"green\"><span>Mike</span>--<span>1000</span></li>\r\n                        <li className=\"green\"><span>Luke</span>--<span>500</span></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import './styles/App.css';\nimport { useState } from 'react';\nimport Level from './pages/level'\nimport Home from './pages/home'\n\nfunction App() {\n  const largest25 = ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Philadelphia', 'San Antonio', 'San Diego', 'Dallas', 'San Jose', 'Austin', 'Jacksonville', 'Fort Worth', 'Columbus', 'Indianapolis','Charlotte','San Francisco','Seattle','Denver','Washington','Nashville','Oklahoma City','El Paso','Boston', 'Portland']\n  const largest50 = ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Philadelphia', 'San Antonio', 'San Diego', 'Dallas', 'San Jose', 'Austin', 'Jacksonville', 'Fort Worth', 'Columbus', 'Indianapolis','Charlotte','San Francisco','Seattle','Denver','Washington','Nashville','Oklahoma City','El Paso','Boston', 'Portland', 'Las Vegas', 'Detroit', 'Memphis', 'Louisville', 'Baltimore', 'Milwaukee', 'Albuquerque', 'Tucson', 'Fresno','Sacramento','Kansas City','Mesa','Atlanta','Omaha','Colorado Springs','Raleigh','Long Beach','Virginia Beach','Miami','Oakland','Minneapolis','Tulsa','Bakersfield','Wichita', 'Arlington']\n  const largest100 = ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Philadelphia', 'San Antonio', 'San Diego', 'Dallas', 'San Jose', 'Austin', 'Jacksonville', 'Fort Worth', 'Columbus', 'Indianapolis','Charlotte','San Francisco','Seattle','Denver','Washington','Nashville','Oklahoma City','El Paso','Boston', 'Portland', 'Las Vegas', 'Detroit', 'Memphis', 'Louisville', 'Baltimore', 'Milwaukee', 'Albuquerque', 'Tucson', 'Fresno','Sacramento','Kansas City','Mesa','Atlanta','Omaha','Colorado Springs','Raleigh','Long Beach','Virginia Beach','Miami','Oakland','Minneapolis','Tulsa','Bakersfield','Wichita', 'Arlington', 'Aurora','Tampa','New Orleans','Cleveland','Honolulu','Anaheim','Lexington KY','Stockton','Corpus Christi','Henderson','Riverside CA','Newark NJ','Saint Paul','Santa Ana','Cincinnati','Irvine','Orlando','Pittsburgh','St. Louis','Greensboro','Jersey City','Anchorage','Lincoln NE','Plano','Durham','Buffalo','Chandler','Chula Vista','Toledo','Madison','Gilbert','Reno','Fort Wayne','North Las Vegas','St. Petersburg','Lubbock','Irving','Laredo','Winston-Salem','Chesapeake','Glendale AZ','Garland','Scottsdale','Norfolk','Boise','Fremont','Spokane','Santa Clarita','Baton Rouge','Richmond']\n  const euroLargest35 = ['Istanbul','Moscow','London','Saint Petersburg','Berlin','Madrid','Kyiv','Rome','Bucharest','Paris','Minsk','Vienna','Hamburg','Warsaw','Budapest','Barcelona','Munich','Kharkiv','Milan','Belgrade','Prague','Nizhny Novgorod','Kazan','Sofia','Birmingham','Brussels','Tbilisi','Samara','Ufa','Rostov-on-Don','Cologne','Voronezh','Perm','Volgograd','Odessa']\n  const levels = ['USA 25 Largest Cities', 'USA 50 Largest Cities', 'USA 100 Largest Cities','Europe 35 Largest Cities']\n  const [cityList, setCityList] = useState([])\n  const [isInLevel, setIsInLevel] = useState(false)\n  const [cityOptions, setCityOptions] = useState(largest25)\n\n  function startRound(){\n    let i = 0\n    let out = []\n    console.log(cityOptions)\n    while(i<10){\n      let tmp = cityOptions[Math.floor(Math.random() * cityOptions.length)]\n      if(!out.includes(tmp)){\n        out.push(tmp)\n        i++\n      }\n    }\n    setCityList(out)\n    setIsInLevel(true)\n  }\n\n  function back(){\n    setIsInLevel(false)\n  }\n\n  function setGame(e){\n    if(e === 'USA 25 Largest Cities'){\n      setCityOptions(largest25)\n    }else if(e === 'USA 50 Largest Cities'){\n      setCityOptions(largest50)\n    }else if(e === 'USA 100 Largest Cities'){\n      setCityOptions(largest100)\n    }else if(e === 'Europe 35 Largest Cities'){\n      setCityOptions(euroLargest35)\n    }\n  }\n\n  return (\n    <div>\n      {isInLevel?<Level cityOptions={cityOptions} cityList={cityList} back={back} startRound={startRound}/>:<Home setGame={setGame} cityOptions={cityOptions} levels={levels} startRound={startRound}/>}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}